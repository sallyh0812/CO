8f 88 00 00  // [00400000] lw $8, 0($28)                   ; 11: lw      $t0, 0($gp)        # Load t0 from memory t0 = 0
8f 8c 00 00  // [00400004] lw $12, 0($28)                  ; 12: lw      $t4, 0($gp)
8f 89 00 04  // [00400008] lw $9, 4($28)                   ; 13: lw      $t1, 4($gp)        # Load t1 from memory t1 = 1
8f 8a 00 00  // [0040000c] lw $10, 0($28)                  ; 14: lw      $t2, 0($gp)        # t2 = 0
21 4a 00 02  // [00400010] addi $10, $10, 2                ; 15: addi    $t2, 2
11 0a 00 06  // [00400014] beq $8, $10, 24 [end-0x00400014]; 17: beq     $t0, $t2, end      # should stall 1, check if beq can fetch correct $t2
21 08 00 01  // [00400018] addi $8, $8, 1                  ; 18: addi    $t0, $t0, 1
01 28 58 22  // [0040001c] sub $11, $9, $8                 ; 19: sub     $t3, $t1, $t0
8f 8b 00 08  // [00400020] lw $11, 8($28)                  ; 20: lw      $t3, 8($gp)         # t3 = 2
11 4b ff fb  // [00400024] beq $10, $11, -20 [loop-0x00400024]; 21: beq     $t2, $t3, loop      # should stall 2, taken
21 8c 00 01  // [00400028] addi $12, $12, 1                ; 22: addi    $t4, $t4, 1
01 8c 38 20  // [0040002c] add $7, $12, $12                ; 23: add     $a3, $t4, $t4
af 8c 00 00  // [00400030] sw $12, 0($28)                  ; 25: sw      $t4, 0($gp)      # s3 = 0
8f 8a 00 00  // [00400034] lw $10, 0($28)                  ; 26: lw      $t2, 0($gp)      # test lw after sw
af 8a 00 0c  // [00400038] sw $10, 12($28)                 ; 27: sw      $t2, 12($gp)     # test sw after lw
