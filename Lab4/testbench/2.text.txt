[00400000] 8f880000 lw $8, 0($28)                   ; 11: lw      $t0, 0($gp)        # Load t0 from memory t0 = 0
[00400004] 8f8c0000 lw $12, 0($28)                  ; 12: lw      $t4, 0($gp)
[00400008] 8f890004 lw $9, 4($28)                   ; 13: lw      $t1, 4($gp)        # Load t1 from memory t1 = 1
[0040000c] 8f8a0000 lw $10, 0($28)                  ; 14: lw      $t2, 0($gp)        # t2 = 0
[00400010] 214a0002 addi $10, $10, 2                ; 15: addi    $t2, 2             
[00400014] 110a0006 beq $8, $10, 24 [end-0x00400014]; 17: beq     $t0, $t2, end      # should stall 1, check if beq can fetch correct $t2
[00400018] 21080001 addi $8, $8, 1                  ; 18: addi    $t0, $t0, 1
[0040001c] 01285822 sub $11, $9, $8                 ; 19: sub     $t3, $t1, $t0
[00400020] 8f8b0008 lw $11, 8($28)                  ; 20: lw      $t3, 8($gp)         # t3 = 2 
[00400024] 114bfffb beq $10, $11, -20 [loop-0x00400024]; 21: beq     $t2, $t3, loop      # should stall 2, taken
[00400028] 218c0001 addi $12, $12, 1                ; 22: addi    $t4, $t4, 1
[0040002c] 018c3820 add $7, $12, $12                ; 23: add     $a3, $t4, $t4
[00400030] af8c0000 sw $12, 0($28)                  ; 25: sw      $t4, 0($gp)      # s3 = 0
[00400034] 8f8a0000 lw $10, 0($28)                  ; 26: lw      $t2, 0($gp)      # test lw after sw
[00400038] af8a000c sw $10, 12($28)                 ; 27: sw      $t2, 12($gp)     # test sw after lw